
<div tal:condition="field.messages|None" class="alert"> 
  <div tal:repeat="msg field.messages">${msg}</div>
</div>

<form 
  id="${field.formid}"
  action="${field.action}${field.anchor}"
  method="${field.method}"
  class="${field.css_class}"
  enctype="multipart/form-data"
  i18n:domain="nive">

    <div tal:condition="field.error" class="alert">
      <h5 i18n:translate="">There was a problem with your submission</h5>
      <p i18n:translate="">Errors have been highlighted below</p>
      <p tal:condition="field.errormsg" class="errorMsg">${field.errormsg}</p>
    </div>

    <tal:block tal:define="rndr field.renderer;
                           tmpl field.widget.item_template"
               tal:repeat="f field.children">
         <div tal:replace="structure rndr(tmpl,field=f,cstruct=cstruct.get(f.name, null))"/>
    </tal:block>
  
    <div tal:condition="field.uploadProgressBar" style="display:none" class="progress">
      <div class="bar bar-success" style="width:0%;"></div>
    </div>

    <div class="form-actions">
        <tal:block repeat="button field.buttons">
          <button
              tal:attributes="disabled button.disabled"
              id="${field.formid+button.name}"
              name="${button.name}"
              type="${button.type}"
              class="${button.action.get('css_class', 'btn')}"
              value="${button.value}">
            <span i18n:translate="">${button.title}</span>
          </button>
        </tal:block>
    </div>
 
<script type="text/javascript" tal:condition="field.use_ajax">
function reform_ajaxify(response, status, xhr, form, oid, mthd) {
  var useProgressBar = '${field.uploadProgressBar}';
  
  if(useProgressBar=='none') {
    // progress bar disabled
    var options = { 
      target: '#'+oid,
      replaceTarget: true,

      success:  function(responseText, statusText, xhr, $form) { 
        if(xhr.getResponseHeader('X-Relocate')) {
          if(window!=window.top) window.parent.close(xhr.getResponseHeader('X-Relocate'));
          else window.location.href = xhr.getResponseHeader('X-Relocate');
        }
        else {
          $('#'+oid).replaceWith(responseText); 
          reform_ajaxify(response, status, xhr, form, oid);
        }
      },
      error:  function(responseText, statusText, xhr, $form) {
        $('#'+oid).replaceWith(responseText.responseText); 
        reform_ajaxify(response, status, xhr, form, oid); 
      }
    };
  } else {
    var progress = $('#'+oid+' .progress');
    if(useProgressBar=='always') progress.show();
    var bar = $('#'+oid+' .progress .bar');
    var delay = 500; // delay in milliseconds before showing the progress bar 
    var showbar = 0;
    var options = { 
      target: '#'+oid,
      replaceTarget: true,
      forceSync: true,

      beforeSend: function() {
        var percentVal = '0%';
        bar.width(percentVal)
      },
      uploadProgress: function(event, position, total, percentComplete) {
        // keep some rest to show the server has to process thew file, too
        if(percentComplete>98) percentComplete = 98;
        var percentVal = percentComplete + '%';
        bar.width(percentVal)
        if(useProgressBar=='auto' && showbar==0) showbar = delay+event.timeStamp;
        if(useProgressBar=='auto' && showbar>0 && showbar<event.timeStamp) { 
          showbar=-1;
          progress.show();
        }
      },
      success:  function(responseText, statusText, xhr, $form) { 
        var percentVal = '100%';
        bar.width(percentVal)
        if(xhr.getResponseHeader('X-Relocate')) {
          if(window!=window.top) window.parent.close(xhr.getResponseHeader('X-Relocate'));
          else window.location.href = xhr.getResponseHeader('X-Relocate');
        }
        else {
          $('#'+oid).replaceWith(responseText); 
          reform_ajaxify(response, status, xhr, form, oid);
        }
      },
      error:  function(responseText, statusText, xhr, $form) {
        $('#'+oid).replaceWith(responseText.responseText); 
        reform_ajaxify(response, status, xhr, form, oid); 
      }
    };
  }
  var extra_options = ${field.ajax_options};
  var name;
  if (extra_options) {
    for (name in extra_options) {
      options[name] = extra_options[name];
    };
  };
  $('#'+oid).ajaxForm(options);
  if(mthd){
    mthd(response, status, xhr, form);
  }
}
reform.addCallback(
  '${field.formid}',
  function(oid) {
    reform_ajaxify(null, null, null, null, oid);
  }
);
</script>

</form>
