Package refactoring from Version 0.9.11 to 1.0.01
----------------------------------------------------
The package will soon be released as stable 1.0 version. For a better package management the previous
`nive` package has been split up into several smaller packages. 

After updating to the new version please make sure the python imports and dotted python strings (important!) 
point to the new packages. If you are using a scaffold based installation you will only have to look at
`__init__.py` containing the main() function. 

Search for these four names and replace them:

nive.cms    ->  nive_cms
nive.userdb ->  nive_userdb
nive.datastore ->  nive_datastore
nive.components.tools -> nive.tools

nive_cms.design -> nive_cms_design_bs2 (this package has to be installed first)


If you have started custom development you might also need to change further imports. Here is a 
complete list of the changes: 

nive.cms    ->  nive_cms
nive.userdb ->  nive_userdb
nive.datastore ->  nive_datastore
nive.components.tools -> nive.tools
nive.components.extensions.fulltextpage -> nive_cms.extensions.fulltextpage
nive.components.extensions.images -> nive_cms.extensions.images
nive.components.extensions.pages -> nive_cms.extensions.pages
nive.components.extensions.path -> nive_cms.extensions.path
nive.components.extensions.sessionuser -> nive_userdb.extensions.sessionuser
nive.components.objects [part 2] -> nive_cms.baseobjects  (see search and replace)
nive.components.extensions -> nive.extensions
nive/tools.py -> nive/tool.py

    
Search and replace nive.components.objects
------------------------------------------
nive.components.objects.base.PageBase -> nive_cms.baseobjects.PageBase
nive.components.objects.base.PageRootBase -> nive_cms.baseobjects.PageRootBase
nive.components.objects.base.PageElementBase -> nive_cms.baseobjects.PageElementBase
nive.components.objects.base.PageElementFileBase -> nive_cms.baseobjects.PageElementFileBase
nive.components.objects.base.PageElementContainerBase -> nive_cms.baseobjects.PageElementContainerBase
nive.components.objects.base.FolderBase -> nive_cms.baseobjects.FolderBase


Locales
--------
nive.locale ->  nive.locale (reform.)
            ->  nive_cms.locale (cms.)
            ->  nive_userdb.locale (userdb.)
            ->  nive_datastore.locale (datastore.)

nive.scaffolds ->  nive_cms.scaffolds


Configuration
-------------
AppConf.meta ! Usage changed !


Renaming
--------
nive.definitions.ObjectConf.workflowDisabled -> nive.definitions.ObjectConf.workflowEnabled
nive.definitions.RootConf.workflowDisabled -> nive.definitions.RootConf.workflowEnabled



removed 'bw' marked functions and unused modules:
---------------------------------
utils.path.DvDirCleaner
utils.datapool2.bakupSQL
utils.datapool2.PoolBakup

application.Registration
    def Include(self, module, **kw):  -> Register()
        Register database conf as part of app conf, not by calling Register() !!!
    def LoadConfiguration(self):  -> SetupRegistry()

application.Application
    def NewDBConnection(self):
    def ConvertID(self, id):
    def GetCountEntries(self):

application.Root
    def LookupTitle()

views
    def AuthenticatedUserName(request):
    def forbidden_view(request):
    
view.BaseView
    def Relocated(self):
    def AjaxRelocate(self, url, messages=None, slot="", raiseException=False):

events.Event
    def RegisterEvent(self, signal, function):
    def RemoveEvent(self, signal, function):

definitions
	FieldConf.settings["validator"] -> FieldConf.validator    
	FieldConf.settings["widget"] -> FieldConf.widget    

portal
	def GetComponents    
    
